@page
@model Proconenct.Pages.ProfessionalProfileModel
@{
    ViewData["Title"] = "Mi Perfil Profesional";
    Layout = "/Pages/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="/css/profiles/main.css" />
<link rel="stylesheet" href="/css/profiles/profile-edit.css" />
<div class="main-content py-4 profile-edit-modern fade-in">
    <div class="row justify-content-center gx-5">
        <!-- Columna izquierda: Formulario -->
        <div class="col-12 col-lg-7 mb-4">
            <div class="bg-white p-4 shadow-sm rounded-4 animate-card">
                <div class="d-flex align-items-center mb-4 gap-2">
                    <i class="fas fa-user-edit fa-lg text-primary"></i>
                    <h2 class="fw-bold mb-0">Mi Perfil Profesional</h2>
                    @if (Model.SuccessMessage != null)
                    {
                        <span class="badge bg-success ms-2 animate-badge">@Model.SuccessMessage</span>
                    }
                </div>
                <h5 class="mb-3 text-secondary"><i class="fas fa-info-circle me-2"></i>Información Básica</h5>
                <form method="post" autocomplete="off">
                    <div class="row g-3 mb-3">
                        <div class="col-12 col-md-6">
                            <label class="form-label">Especialidades *</label>
                            @Html.TextBoxFor(m => m.SpecialtiesString, new { @class = "form-control animate-input", placeholder = "Ej: Derecho Laboral, Derecho Civil" })
                        </div>
                        <div class="col-12 col-md-6">
                            <label class="form-label">Ubicación *</label>
                            @Html.TextBoxFor(m => m.UpdateDto.Location, new { @class = "form-control animate-input", placeholder = "Ciudad, País" })
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Biografía Profesional *</label>
                        @Html.TextAreaFor(m => m.UpdateDto.Bio, 4, 1, new { @class = "form-control animate-input", placeholder = "Describe tu experiencia y especialidades..." })
                        <small class="text-muted">Mínimo 100 caracteres. Describe tu experiencia y especialidades.</small>
                    </div>
                    <div class="row g-3 mb-3">
                        <div class="col-6 col-md-4">
                            <label class="form-label">Años de Experiencia</label>
                            @Html.TextBoxFor(m => m.UpdateDto.ExperienceYears, new { @class = "form-control animate-input", type = "number", min = "0" })
                        </div>
                        <div class="col-6 col-md-4">
                            <label class="form-label">Tarifa por Hora (COP) *</label>
                            @Html.TextBoxFor(m => m.UpdateDto.HourlyRate, new { @class = "form-control animate-input", type = "number", min = "0" })
                        </div>
                        @* Eliminar cualquier input o sección de edición para Model.UpdateDto.Services, ya que no existe en el modelo *@
                        @* Mostrar servicios solo en modo lectura si existen en Model.Profile.Services *@
                        @if (Model.Profile != null && Model.Profile.Services != null && Model.Profile.Services.Count > 0)
                        {
                            <div class="col-12 col-md-4">
                                <label class="form-label fw-bold">Servicios ofrecidos</label>
                                <ul class="list-group">
                                    @foreach (var service in Model.Profile.Services)
                                    {
                                        <li class="list-group-item">@service</li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Certificaciones</label>
                        @Html.TextBoxFor(m => m.CredentialsString, new { @class = "form-control animate-input", placeholder = "Ej: Abogada Colegiada, Maestria..." })
                    </div>
                    
                    <!-- Control de estado del perfil -->
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            @Html.CheckBoxFor(m => m.IsProfileActive, new { @class = "form-check-input", id = "profileStatus" })
                            <label class="form-check-label fw-bold" for="profileStatus">
                                <i class="fas fa-toggle-on text-success me-2"></i>Perfil Activo
                            </label>
                        </div>
                        <small class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            Cuando está activo, tu perfil es visible en las búsquedas de clientes. 
                            Cuando está inactivo, solo tú puedes verlo.
                        </small>
                    </div>
                    
                    <div class="d-flex gap-2 mt-4">
                        <button type="submit" class="btn btn-primary btn-lg animate-btn">Guardar Cambios</button>
                        <button type="reset" class="btn btn-outline-secondary btn-lg animate-btn">Restaurar</button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Columna derecha: Resumen visual y foto -->
        <div class="col-12 col-lg-5 mb-4">
            <div class="bg-white p-4 shadow-sm rounded-4 d-flex flex-column align-items-center animate-card">
                <div class="profile-img-lg mb-3">
                    <img src="/img/landing/image.png" alt="Foto de perfil" class="rounded-circle border border-3 border-primary shadow" width="140" height="140" style="object-fit:cover;" />
                </div>
                @if (Model.Profile != null)
                {
                    <h4 class="fw-bold mb-1">@Model.Profile.UserFirstName @Model.Profile.UserLastName</h4>
                    <div class="text-muted mb-2">@Model.Profile.Location</div>
                    <div class="mb-3">
                        @foreach (var spec in Model.Profile.Specialties)
                        {
                            <span class="badge bg-primary me-1">@spec</span>
                        }
                    </div>
                    <div class="mb-3 text-center">
                        <i class="fas fa-quote-left text-primary"></i>
                        <span class="fst-italic">@Model.Profile.Bio</span>
                    </div>
                    <div class="d-flex flex-wrap gap-2 justify-content-center mb-3">
                        <span class="badge bg-success">@Model.Profile.ExperienceYears años exp.</span>
                        <span class="badge bg-info">$@Model.Profile.HourlyRate.ToString("N0") COP/h</span>
                    </div>
                    <div class="mb-2">
                        <i class="fas fa-certificate text-warning me-1"></i>
                        <span class="text-secondary">@string.Join(", ", Model.Profile.Credentials)</span>
                    </div>
                }
                else
                {
                    <h4 class="fw-bold mb-1 text-muted">Sin perfil cargado</h4>
                }
            </div>
        </div>
    </div>
</div> 