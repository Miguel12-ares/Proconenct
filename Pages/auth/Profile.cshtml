@page
@model ProfileModel
@{
    ViewData["Title"] = "Editar Perfil";
}
<style>
    /* Estilos de respaldo para asegurar que se apliquen */
    .profile-edit-bg {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
        min-height: 100vh !important;
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;
        padding: 40px 20px !important;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;
    }
    
    .profile-edit-card {
        background: #ffffff !important;
        border-radius: 16px !important;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1) !important;
        padding: 40px 36px 32px 36px !important;
        max-width: 480px !important;
        width: 100% !important;
        margin: 0 auto !important;
        position: relative !important;
        overflow: hidden !important;
    }
    
    .profile-edit-title {
        font-size: 1.75rem !important;
        font-weight: 700 !important;
        margin-bottom: 32px !important;
        text-align: center !important;
        color: #2d3748 !important;
        position: relative !important;
    }
    
    .profile-edit-form input,
    .profile-edit-form textarea {
        background: #f7fafc !important;
        border: 2px solid #e2e8f0 !important;
        border-radius: 8px !important;
        padding: 12px 16px !important;
        font-size: 1rem !important;
        width: 100% !important;
        transition: all 0.3s ease !important;
        font-family: inherit !important;
        color: #2d3748 !important;
    }
    
    .profile-edit-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
        color: #ffffff !important;
        border: none !important;
        padding: 14px 32px !important;
        border-radius: 8px !important;
        font-size: 1.1rem !important;
        font-weight: 600 !important;
        cursor: pointer !important;
        width: 100% !important;
        transition: all 0.3s ease !important;
        text-transform: uppercase !important;
        letter-spacing: 0.5px !important;
    }
    
    .profile-success-message {
        background: linear-gradient(135deg, #48bb78 0%, #38a169 100%) !important;
        color: #ffffff !important;
        padding: 16px 20px !important;
        border-radius: 8px !important;
        margin-bottom: 24px !important;
        text-align: center !important;
        font-weight: 600 !important;
    }
    
    .profile-error-message {
        background: linear-gradient(135deg, #f56565 0%, #e53e3e 100%) !important;
        color: #ffffff !important;
        padding: 16px 20px !important;
        border-radius: 8px !important;
        margin-bottom: 24px !important;
        text-align: center !important;
        font-weight: 600 !important;
    }
</style>

<div class="profile-edit-bg">
    <div class="profile-edit-card">
        <h2 class="profile-edit-title">Información Personal</h2>
        
        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
        {
            <div class="profile-success-message">@Model.SuccessMessage</div>
        }
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="profile-error-message">@Model.ErrorMessage</div>
        }
        
        <form method="post" class="profile-edit-form">
            <div class="profile-edit-group">
                <label for="email">Correo</label>
                <input type="email" id="email" value="@Model.Email" readonly class="profile-edit-readonly" />
            </div>
            
            <div class="profile-edit-group">
                <label for="firstName">Nombre <span class="required">*</span></label>
                <input type="text" id="firstName" name="FirstName" value="@Model.FirstName" required />
                <span asp-validation-for="FirstName" class="profile-edit-error"></span>
            </div>
            
            <div class="profile-edit-group">
                <label for="lastName">Apellido <span class="required">*</span></label>
                <input type="text" id="lastName" name="LastName" value="@Model.LastName" required />
                <span asp-validation-for="LastName" class="profile-edit-error"></span>
            </div>
            
            <div class="profile-edit-group">
                <label for="phone">Teléfono <span class="required">*</span></label>
                <input type="tel" id="phone" name="Phone" value="@Model.Phone" required />
                <span asp-validation-for="Phone" class="profile-edit-error"></span>
            </div>
            
            <div class="profile-edit-group">
                <label for="bio">Biografía</label>
                <textarea id="bio" name="Bio" rows="4" maxlength="500">@Model.Bio</textarea>
                <span asp-validation-for="Bio" class="profile-edit-error"></span>
            </div>
            
            <div class="profile-edit-actions">
                <button type="submit" class="profile-edit-btn">Guardar Cambios</button>
            </div>
            
            <!-- Sección de eliminación de cuenta -->
            <div class="profile-delete-account mt-5 pt-4 border-top">
                <h3 class="text-danger mb-3">Zona de peligro</h3>
                <p class="text-muted mb-4">
                    Al eliminar tu cuenta, se borrarán permanentemente todos tus datos, incluyendo reservas y reseñas. 
                    <!-- Botón para abrir el modal de confirmación -->
                <button type="button" class="btn btn-danger btn-block mt-4" data-bs-toggle="modal" data-bs-target="#deleteAccountModal">
                    <i class="fas fa-trash-alt me-2"></i>Eliminar mi cuenta
                </button>

                <!-- Modal de confirmación de eliminación -->
                <div class="modal fade" id="deleteAccountModal" tabindex="-1" aria-labelledby="deleteAccountModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header bg-danger text-white">
                                <h5 class="modal-title" id="deleteAccountModalLabel">¿Estás seguro de que deseas eliminar tu cuenta?</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                            </div>
                            <div class="modal-body">
                                <div class="alert alert-danger">
                                    <strong>¡Atención!</strong> Esta acción no se puede deshacer. Se eliminarán todos tus datos de forma permanente.
                                </div>
                                <p>Al eliminar tu cuenta:</p>
                                <ul>
                                    <li>Se eliminará tu perfil y toda tu información personal</li>
                                    <li>Se cancelarán todas tus citas pendientes</li>
                                    <li>Perderás el acceso a todas las funcionalidades de la plataforma</li>
                                </ul>
                                <div class="mb-3">
                                    <label for="confirmDeleteText" class="form-label">Escribe <strong>ELIMINAR CUENTA</strong> para confirmar:</label>
                                    <input type="text" class="form-control" id="confirmDeleteText" required>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                                <button type="button" class="btn btn-danger" id="confirmDeleteBtn" disabled>Eliminar mi cuenta permanentemente</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        
        <!-- Script para manejar la eliminación de cuenta -->
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const confirmText = document.getElementById('confirmDeleteText');
                const confirmBtn = document.getElementById('confirmDeleteBtn');
                
                confirmText.addEventListener('input', function() {
                    confirmBtn.disabled = confirmText.value.toUpperCase() !== 'ELIMINAR CUENTA';
                });

                confirmBtn.addEventListener('click', async function() {
                    if (confirmText.value.toUpperCase() !== 'ELIMINAR CUENTA') {
                        return;
                    }

                    try {
                        // Mostrar indicador de carga
                        const originalBtnText = confirmBtn.innerHTML;
                        confirmBtn.disabled = true;
                        confirmBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Eliminando...';

                        // Realizar la petición para eliminar la cuenta
                        const response = await fetch('/api/user/account', {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            credentials: 'same-origin'
                        });

                        if (response.ok) {
                            const result = await response.json();
                            
                            // Mostrar mensaje de éxito
                            alert(result.message || 'Tu cuenta ha sido eliminada correctamente. Lamentamos verte ir.');
                            
                            // Redirigir a la página de login
                            window.location.href = result.RedirectTo || '/auth/Login';
                        } else {
                            const errorData = await response.json();
                            throw new Error(errorData.message || 'Error al eliminar la cuenta');
                        }
                    } catch (error) {
                        console.error('Error al eliminar la cuenta:', error);
                        alert('Error al eliminar la cuenta: ' + (error.message || 'Inténtalo de nuevo más tarde.'));
                        $('#deleteAccountModal').modal('hide');
                    } finally {
                        // Restaurar el botón
                        if (confirmBtn) {
                            confirmBtn.disabled = false;
                            confirmBtn.innerHTML = 'Eliminar mi cuenta permanentemente';
                        }
                    }
                });
            });
        </script>
    </div>
</div>

@section Scripts {
    <script>
        // Validación client-side básica
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('.profile-edit-form');
            const submitBtn = document.querySelector('.profile-edit-btn');
            
            form.addEventListener('submit', function(e) {
                const firstName = document.getElementById('firstName').value.trim();
                const lastName = document.getElementById('lastName').value.trim();
                const phone = document.getElementById('phone').value.trim();
                
                if (!firstName || !lastName || !phone) {
                    e.preventDefault();
                    alert('Por favor, completa todos los campos obligatorios.');
                    return false;
                }
                
                // Mostrar loading
                submitBtn.textContent = 'Guardando...';
                submitBtn.disabled = true;
            });
            
            // Contador de caracteres para bio
            const bioTextarea = document.getElementById('bio');
            bioTextarea.addEventListener('input', function() {
                const maxLength = 500;
                const currentLength = this.value.length;
                if (currentLength > maxLength) {
                    this.value = this.value.substring(0, maxLength);
                }
            });
            
            // Auto-guardar en localStorage para evitar pérdida de datos
            const inputs = form.querySelectorAll('input, textarea');
            inputs.forEach(input => {
                const key = input.name || input.id;
                const savedValue = localStorage.getItem(`profile_${key}`);
                if (savedValue && !input.readOnly) {
                    input.value = savedValue;
                }
                
                input.addEventListener('input', function() {
                    if (!this.readOnly) {
                        localStorage.setItem(`profile_${key}`, this.value);
                    }
                });
            });
            
            // Limpiar localStorage después de guardar exitosamente
            form.addEventListener('submit', function() {
                setTimeout(() => {
                    inputs.forEach(input => {
                        const key = input.name || input.id;
                        localStorage.removeItem(`profile_${key}`);
                    });
                }, 1000);
            });
        });
    </script>
} 